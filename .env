# Environment Configuration File (.env)
# Used for local development.
# DO NOT COMMIT THIS FILE TO VERSION CONTROL. ADD IT TO .gitignore.

# --- Node Environment ---
# Set to 'development', 'production', or 'test'
# Controls logging levels, error details, etc.
NODE_ENV=development

# --- Server Configuration ---
# The port the application server will listen on.
PORT=5000

# --- Database Configuration ---
# PostgreSQL connection string URL format:
# postgresql://USER:PASSWORD@HOST:PORT/DATABASE_NAME?schema=public
# Ensure USER, PASSWORD, and DATABASE_NAME match your docker-compose.yml or actual DB setup.
# HOST should be the database service name ('db' in the example docker-compose.yml) for Docker networking.
# !! IMPORTANT: Replace 'securepassword' with a strong, unique password for production !!
DB_HOST=db # Docker service name
DB_PORT=5432
DB_USER=adminuser # Example user from docker-compose
DB_PASSWORD=securepassword # Example password from docker-compose - CHANGE THIS
DB_NAME=inventory_pos_db # Example db name from docker-compose
DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"

# --- Redis Configuration ---
# Redis connection string URL format:
# redis://HOST:PORT
# HOST should be the Redis service name ('cache' in the example docker-compose.yml).
# No password is set in the example docker-compose.yml Redis service. Add password if needed: redis://:PASSWORD@HOST:PORT
REDIS_HOST=cache # Docker service name
REDIS_PORT=6379
REDIS_URL="redis://${REDIS_HOST}:${REDIS_PORT}"

# --- Security Configuration ---
# JWT (JSON Web Token) secret key for signing tokens.
# !! IMPORTANT: MUST be a strong, random string, AT LEAST 32 characters long. REPLACE THIS !!
JWT_SECRET="replace_this_with_a_very_strong_random_32_plus_char_secret_key"

# JWT token expiration time (e.g., '1d', '2h', '30m'). Shorter times are generally more secure.
JWT_EXPIRES_IN="1d"

# Optional: JWT Refresh Token configuration (if implementing refresh tokens)
# JWT_REFRESH_SECRET="replace_this_with_another_strong_random_secret_key"
# JWT_REFRESH_EXPIRES_IN="7d"

# --- CORS Configuration ---
# Allowed origins for Cross-Origin Resource Sharing.
# For local development, '*' can be used, but it's insecure.
# !! IMPORTANT: For production, list specific frontend URLs separated by commas (e.g., "https://app.yourdomain.com,https://admin.yourdomain.com") !!
CORS_ORIGIN="*"

# --- Logging Configuration ---
# Log level severity (error, warn, info, http, verbose, debug, silly).
# 'debug' is useful for development, 'info' or 'warn' for production.
LOG_LEVEL="debug"

# --- Optional: Third-Party API Keys ---
# Add API keys or other sensitive configurations needed by your application here.
# EXAMPLE_API_KEY=
# STRIPE_SECRET_KEY=
# SENDGRID_API_KEY=